
%%% 2 D Lognormal Process

%%%% Non intrusive Method %%%%%%
% Log Normal Process with Exponential Covariance . 

%%%% This code uses the file generated by Exponential_TwoDimension -
%%%% eigfun_2D.dat

clear all

x = -0.5:0.01:0.5;
y = -0.5:0.01:0.5;


%KLE random dimension
KLE_dim = 3;
% PCE input order
ord_in = 2;
% Number of Spectral Terms in expansion of input random coefficient
n_inpce = factorial(ord_in + KLE_dim)/(factorial(ord_in)*factorial(KLE_dim))

sigma_g = 1;


n = 50000;
L = zeros(length(x),length(y),n);
mu = zeros(length(x),length(y));
g_0 = mu;

% eigfun = sqrt(lambda)*phi(x)
eigfun2d = dlmread('eigfun_2D.dat');
for i = 1:KLE_dim
eigfun_2D(:,:,i) = eigfun2d((i-1)*length(x)+1:i*length(x),(i-1)*length(y)+1:i*length(y));
end

 
% Generating P random variables of size (1,n)
for i = 1:KLE_dim
xi(i,:) = randn(1,n);
end

% Generating 'n' realisations of the Log normal random process
for j = 1:n
   
    g_x = zeros(length(x),length(y));
    
for i = 1:KLE_dim
    
    g_x = g_x + xi(i,j).*eigfun_2D(:,:,i).*sigma_g;
    
end

L(:,:,j) = exp(g_0 + g_x);

end


% Ensemble Mean of Lognormal Process through Direct MCS
for i = 1:length(x)
    for j = 1:length(y)
      L_mean(i,j) = sum(L(i,j,:))/n; 
    end
end

figure(1)
surf(x,y,L_mean)

% PCE Coefficients of Lognormal Process through MCS

psi_0 = ones(1,n);
psi_1 = xi(1,:);
psi_2 = xi(2,:);
psi_3 = xi(3,:);


% % psi_4 = xi(4,:);
% % psi_5 = xi(5,:);
% % psi_6 = xi(6,:);
% % psi_7 = xi(7,:);
% % psi_8 = xi(8,:);
% % psi_9 = xi(9,:);

psi_4 = xi(1,:).^2-1;
psi_5 = xi(1,:).*xi(2,:);
psi_6 = xi(2,:).^2-1;
psi_7 = xi(1,:).*xi(3,:);
psi_8 = xi(3,:).^2-1;
psi_9 = xi(2,:).*xi(3,:);

for i = 1:length(x)
    
    for j = 1:length(y)

        temp(1,:) = L(i,j,:);
        
        a(i,j,1) = (sum(temp.*psi_0)/n)/(sum(psi_0.*psi_0)/n);
        a(i,j,2) = (sum(temp.*psi_1)/n)/(sum(psi_1.*psi_1)/n);
        a(i,j,3) = (sum(temp.*psi_2)/n)/(sum(psi_2.*psi_2)/n);
        a(i,j,4) = (sum(temp.*psi_3)/n)/(sum(psi_3.*psi_3)/n);
        a(i,j,5) = (sum(temp.*psi_4)/n)/(sum(psi_4.*psi_4)/n);
        a(i,j,6) = (sum(temp.*psi_5)/n)/(sum(psi_5.*psi_5)/n);
        a(i,j,7) = (sum(temp.*psi_6)/n)/(sum(psi_6.*psi_6)/n);
        a(i,j,8) = (sum(temp.*psi_7)/n)/(sum(psi_7.*psi_7)/n);
        a(i,j,9) = (sum(temp.*psi_8)/n)/(sum(psi_8.*psi_8)/n);
        a(i,j,10) = (sum(temp.*psi_9)/n)/(sum(psi_9.*psi_9)/n);
    end
    
end


for k = 1:10
figure(k)
surf(x,y,a(:,:,k))
end
legend
